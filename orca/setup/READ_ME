This Orca distribution contains an implementation of the Orca language for
the following systems:

- Sparc processors running Solaris2;
- Intel 80X68/Pentium systems running Linux or BSD/OS.

Included are two runtime systems:

- unixproc, which allows the user to run an Orca program within one
  unix process, with simulated parallelism.
- panda3.0, which allows the user to run an Orca program on multiple
  processors.

Extracting the tar-file results in a directory containing two sub-
directories: panda and orca.

To install the Orca system (and Panda), proceed as follows:

Run the "setup" command. This script will ask you for the current directory
(pwd is no good as it often gives the machine-dependent name, not the logical
name), called <src> later on, and a target directory (called <target> later on)
to put the binaries in (suggested name: /usr/local/orca) and will then create
an "INSTALL" script.
If you make a typo while answering the question, you can just rerun
the "setup" script.

Before running the INSTALL script, make sure that "gcc", "gmake" and
"makedepend" are available through your PATH. This can be checked with
"which gcc", "which gmake" and "which makedepend". (On Solaris, makedepend
is probably in /usr/openwin/bin; on Linux and BSD/OS, it probably is in
/usr/X11/bin). If you don't have makedepend, one is installed
automatically in <target>/bin, but this one is a shell script, based on
dependencies generated by gcc, so it is slow. Gmake and gcc are available
from the various GNU ftp sites:

	ASIA: ftp.cs.titech.ac.jp, utsun.s.u-tokyo.ac.jp:/ftpsync/prep,
  cair-archive.kaist.ac.kr:/pub/gnu, ftp.nectec.or.th:/pub/mirrors/gnu
	AUSTRALIA: archie.au:/gnu (archie.oz or archie.oz.au for ACSnet)
	AFRICA: ftp.sun.ac.za:/pub/gnu
	MIDDLE-EAST: ftp.technion.ac.il:/pub/unsupported/gnu
	EUROPE: irisa.irisa.fr:/pub/gnu, ftp.univ-lyon1.fr:pub/gnu,
  ftp.mcc.ac.uk, unix.hensa.ac.uk:/mirrors/uunet/systems/gnu,
  src.doc.ic.ac.uk:/gnu, ftp.ieunet.ie:pub/gnu, ftp.eunet.ch,
  nic.switch.ch:/mirror/gnu, ftp.informatik.rwth-aachen.de:/pub/gnu,
  ftp.informatik.tu-muenchen.de, ftp.win.tue.nl:/pub/gnu,
  ftp.funet.fi:/pub/gnu, ftp.denet.dk, ftp.stacken.kth.se, isy.liu.se,
  ftp.luth.se:/pub/unix/gnu, ftp.sunet.se:/pub/gnu, archive.eu.net
	SOUTH AMERICA: ftp.inf.utfsm.cl:/pub/gnu, ftp.unicamp.br:/pub/gnu
	WESTERN CANADA: ftp.cs.ubc.ca:/mirror2/gnu
	USA: wuarchive.wustl.edu:/systems/gnu, labrea.stanford.edu,
  ftp.digex.net:/pub/gnu, ftp.kpc.com:/pub/mirror/gnu, f.ms.uky.edu:/pub3/gnu,
  jaguar.utah.edu:/gnustuff, ftp.hawaii.edu:/mirrors/gnu,
  vixen.cso.uiuc.edu:/gnu, mrcnext.cso.uiuc.edu:/pub/gnu,
  ftp.cs.columbia.edu:/archives/gnu/prep, col.hp.com:/mirrors/gnu,
  gatekeeper.dec.com:/pub/GNU, ftp.uu.net:/systems/gnu

After successful installation, there will be a "<target>/bin" directory
containing some scripts (oc_panda, oc_unixproc) to compile Orca programs,
and a "<target>/man" directory containing manual pages for these scripts.
This "<target>/bin" directory and "<target>/bin.(sol2|linux|bsdi)" should
be added to the PATH environment variable.

NOTES:

1. Execution of Orca programs.

1.1 Unixproc RTS

   An Orca program compiled for the unixproc RTS requires one command line
   parameter: the number of simulated hosts.

1.2 Panda RTS

   A command "prun" is provided in <target>/bin for easy parallel execution of
   Orca programs compiled for the Panda RTS. See the manual page for prun.
   There is one file that must be made by hand, before prun can be used
   succesfully. In <target>/reserve, there must be a file called "pool",
   which contains the names of the machines that can be used for running
   Orca programs, each name on a separate line.
   Prun uses rsh, and this requires that you have relevant .rhosts files: see
   the manual page for rsh(1). If you need not run this style of Orca program
   by hand, skip the rest of this section.
   The Orca programs compiled for the Panda RTS require two command line
   parameters: the number of "this host" (starting at 0) and the total number
   of hosts. Orca programs for the Panda RTS must be executed from one
   directory, as they communicate via a file "panda_adm" in the current
   directory. If such a file "panda_adm" remains in existence after parallel
   execution, it is best to remove it.

2. IP-Multicast and IP network.

   IP-Multicast is (by default) limited to one IP network, so it is impossible
   to run Orca programs in parallel on different IP networks.

3. Literature

   Research papers on Orca can be found in our ftp site, ftp.cs.vu.nl, and via
   the Orca World-wide Web page http://www.cs.vu.nl/proj/orca/
   The Orca reference manual and user manual are also available through this
   page (but postscript versions of these can also be found in <src>/orca/doc.

4. Examples
   
   The <src>/orca/examples directory contains several example orca programs.

Please send bug-reports to ceriel@cs.vu.nl.

Note: we have had some problems with the gcc optimizer on 80X86/Pentium systems.
In particular, the barnes example program does not run on Linux when compiled
with -O. Here are two simple C programs to test your gcc installation. I don't
have a fix, but I have reported these problems in gnu.gcc.bug.

/* Demonstrates a bug in gcc 2.8.1 on a Pentium.
   This program runs fine when compiled with gcc ??.c, but crashes
   when compiled with gcc -O ??.c.
   This also happens when compiling with gcc 2.7.2.3 or egcs 2.90.22.
*/

#include <stdio.h>

inline double
mytrunc (double x)
{
	return (double)(long long int) x;
}

void bug1(void)
{
	char buf[256];

	printf("%g\n", mytrunc(4.5));
}

int main(int argc, char **argv) { bug1();  return 0; }
/* end of first program */


#include <stdlib.h>
#include <stdio.h>

/* Demonstrates a bug in gcc 2.8.1 on a Pentium.
   When compiled without optimization, it prints (correctly):
	i = 32
   but when compiled with -O2, it prints (incorrectly):
	i = 31
   If the loop starts with i = 2, it prints i = 30, etc.

   This bug does not occur in gcc 2.7.2.3 or egcs 2.90.22.
*/

int main(int argc, char *argv[]) {
	int	i;

	for (i = 1; i < 32; i++) {
	}
	printf("i = %d\n", i);
}
/* end of second program */

--
Ceriel Jacobs					Voice: +31 20 444 7759
Division of Mathematics and Computer Science	Fax:   +31 20 444 7653
Vrije Universiteit, De Boelelaan 1081a		Email: ceriel@cs.vu.nl
1081 HV Amsterdam, The Netherlands		http://www.cs.vu.nl/~ceriel
